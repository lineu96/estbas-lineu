#geom_smooth(se=F)+
xlab("X") +
ylab("Y") +
ggtitle("Correlação negativa")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
ggpubr::ggarrange(g1,g2,g3, nrow = 1)
set.seed(2)
v1 = rnorm(100)
v2 = rnorm(100)
x = v1*2
y = v1+v2
z = v1-v2
k = v1*(-2)
df <- data.frame(x=x,y=y,z=z,k=k)
g1 <- ggplot(data = df,
mapping = aes(x = y,
y = x)) +
geom_point()+
geom_smooth(method = 'lm', se=F, col=2)+
#geom_smooth(se=F)+
xlab("X") +
ylab("Y") +
ggtitle("Correlação positiva")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
g2 <- ggplot(data = df,
mapping = aes(x = y,
y = z)) +
geom_point()+
geom_smooth(method = 'lm', se=F, col=2)+
#geom_smooth(se=F)+
xlab("X") +
ylab("Y") +
ggtitle("Ausência de correlação")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
g3 <- ggplot(data = df,
mapping = aes(x = k,
y = z)) +
geom_point()+
geom_smooth(method = 'lm', se=F, col=2)+
#geom_smooth(se=F)+
xlab("X") +
ylab("Y") +
ggtitle("Correlação negativa")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
ggpubr::ggarrange(g1,g2,g3, nrow = 1)
set.seed(2)
v1 = rnorm(1000)
v2 = rnorm(1000)
x = v1*2
y = v1+v2
z = v1-v2
k = v1*(-2)
df <- data.frame(x=x,y=y,z=z,k=k)
g1 <- ggplot(data = df,
mapping = aes(x = y,
y = x)) +
geom_point()+
geom_smooth(method = 'lm', se=F, col=2)+
#geom_smooth(se=F)+
xlab("X") +
ylab("Y") +
ggtitle("Correlação positiva")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
g2 <- ggplot(data = df,
mapping = aes(x = y,
y = z)) +
geom_point()+
geom_smooth(method = 'lm', se=F, col=2)+
#geom_smooth(se=F)+
xlab("X") +
ylab("Y") +
ggtitle("Ausência de correlação")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
g3 <- ggplot(data = df,
mapping = aes(x = k,
y = z)) +
geom_point()+
geom_smooth(method = 'lm', se=F, col=2)+
#geom_smooth(se=F)+
xlab("X") +
ylab("Y") +
ggtitle("Correlação negativa")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
ggpubr::ggarrange(g1,g2,g3, nrow = 1)
ggplot(data = dados,
mapping = aes(x = continua,
y = discreta)) +
geom_point()+
geom_smooth(method = 'lm', se=F, col=2)+
#geom_smooth(se=F)+
xlab("X") +
ylab("Y") +
ggtitle("Correlação positiva")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
ggplot(data = dados,
mapping = aes(x = continua,
y = discreta)) +
geom_point()+
geom_smooth(method = 'lm', se=F, col=2)+
#geom_smooth(se=F)+
xlab("X") +
ylab("Y") +
ggtitle("Correlação positiva")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
ggplot(data = dados,
mapping = aes(x = nominal,
y=continua)) +
stat_boxplot(geom ='errorbar')
ggplot(data = dados,
mapping = aes(x = nominal,
y=continua)) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1,
fill = '#E0F8F7')
ggplot(data = dados,
mapping = aes(x = nominal,
y=continua)) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1,
fill = '#E0F8F7')+
xlab("x") +
ylab("y") +
ggtitle("Gráfico")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
dados %>%
group_by(nominal) %>%
summarise(freq = n())
dados %>%
group_by(nominal) %>%
summarise(Média = mean,
`Desvio padrão` = sd)
dados %>%
group_by(nominal) %>%
summarise(Média = mean(),
`Desvio padrão` = sd())
dados %>%
group_by(nominal) %>%
summarise(Média = mean(continua),
`Desvio padrão` = sd(continua))
summary(dados$continua)
dados %>%
group_by(nominal) %>%
summarise(Média = mean(continua),
Mediana = median(continua)
`Desvio padrão` = sd(continua))
dados %>%
group_by(nominal) %>%
summarise(Média = mean(continua),
Mediana = median(continua),
`Desvio padrão` = sd(continua))
df <- data.frame(f1 = sample(letters[1:5], 500, replace = T),
f2 = sample(letters[6:10], 500, replace = T))
tabela <- addmargins(table(df$f1, df$f2))
knitr::kable(tabela,
caption = "Tabela de dupla entrada para...",
align ="ccc" )
tabela
tabela[1,1]
colnames(tabela)
colnames(tabela)[ncol(tabela)] <- "Total"
tabela
colnames(tabela)[ncol(tabela)] <- "Total"
row.names(tabela)[nrow(tabela)] <- "Total"
tabela
df <- data.frame(f1 = sample(letters[1:5], 500, replace = T),
f2 = sample(letters[6:10], 500, replace = T))
tabela <- addmargins(table(df$f1, df$f2))
prop.table(tabela)
prop.table(tabela, margin = 1)
prop.table(tabela[-nrow(tabela),
-ncol(tabela)],
margin = 1)
tabela2 <- prop.table(tabela[-nrow(tabela),
-ncol(tabela)],
margin = 1)
tabela2 <- addmargins(tabela2)
tabela2
tabela3 <- prop.table(tabela[-nrow(tabela),
-ncol(tabela)],
margin = 1)
tabela3 <- addmargins(tabela3)
tabela3
df <- data.frame(f1 = sample(letters[1:5], 500, replace = T),
f2 = sample(letters[6:10], 500, replace = T))
tabela <- addmargins(table(df$f1, df$f2))
tabela2 <- prop.table(tabela[-nrow(tabela),
-ncol(tabela)],
margin = 1)
tabela2 <- addmargins(tabela2)
tabela2
tabela3 <- prop.table(tabela[-nrow(tabela),
-ncol(tabela)],
margin = 2)
tabela3 <- addmargins(tabela3)
tabela3
tabela3 <- ?prop.table(tabela[-nrow(tabela),
-ncol(tabela)],
margin = 2)
?prop.table
tabela4 <- prop.table(tabela[-nrow(tabela),
-ncol(tabela)],
margin = 1:2)
tabela4 <- addmargins(tabela4)
tabela4
tabela4 <- prop.table(tabela[-nrow(tabela),
-ncol(tabela)],
margin = c(1,2))
tabela4
df <- data.frame(f1 = sample(letters[1:5], 500, replace = T),
f2 = sample(letters[6:10], 500, replace = T))
tabela <- addmargins(table(df$f1, df$f2))
tabela2 <- prop.table(tabela[-nrow(tabela),
-ncol(tabela)],
margin = 1)
tabela2 <- addmargins(tabela2)
tabela2
tabela3 <- prop.table(tabela[-nrow(tabela),
-ncol(tabela)],
margin = 2)
tabela3 <- addmargins(tabela3)
tabela3
tabela4 <- prop.table(tabela[-nrow(tabela),
-ncol(tabela)],
margin = c(1,2))
tabela4 <- addmargins(tabela4)
tabela4
tabela4 <- prop.table(tabela[-nrow(tabela),
-ncol(tabela)])
tabela4 <- addmargins(tabela4)
tabela4
tabela2 <- prop.table(tabela[-nrow(tabela),
-ncol(tabela)],
margin = 1)
tabela2 <- addmargins(tabela2)
tabela2
round(tabela, 2)
round(tabela2, 2)
row.names(tabela)[nrow(tabela)] <- "Total"
\endColumns
\endColumns
\endColumns
\endColumns
\endColumns
rnorm(10,1.6,0.3)
rnorm(10,1.6,0.2)
rnorm(10,1.6,0.1)
round(rnorm(10,1.6,0.1), 2)
set.seed(2)
altura <- round(rnorm(10,1.6,0.1), 2)
set.seed(2)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <-  round(rnorm(10,60,10), 2)
cor(altura, peso)
set.seed(2)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <-  round(rnorm(10,60,10), 2)
cor(altura, peso)
set.seed(3)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <-  round(rnorm(10,60,10), 2)
cor(altura, peso)
set.seed(4)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <-  round(rnorm(10,60,10), 2)
cor(altura, peso)
set.seed(5)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <-  round(rnorm(10,60,10), 2)
cor(altura, peso)
set.seed(6)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <-  round(rnorm(10,60,10), 2)
cor(altura, peso)
set.seed(7)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <-  round(rnorm(10,60,10), 2)
cor(altura, peso)
set.seed(1909)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <-  round(rnorm(10,60,10), 2)
cor(altura, peso)
set.seed(190996)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <-  round(rnorm(10,60,10), 2)
cor(altura, peso)
set.seed(19099612)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <-  round(rnorm(10,60,10), 2)
cor(altura, peso)
set.seed(190996122)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <-  round(rnorm(10,60,10), 2)
cor(altura, peso)
altura <- round(rnorm(10,1.6,0.1), 2)
altura
altura-1
(altura-1)*100
((altura-1)*100)+runif(1,-5,5)
set.seed(1)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <-  round(((altura-1)*100)+runif(1,-5,5), 2)
cor(altura, peso)
plot(peso~altura)
round(((altura-1)*100)+runif(1,-5,5), 2)
round(rnorm(10,1.6,0.1), 2)
set.seed(1)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <-  round(((altura-1)*100)+runif(1,-10,10), 2)
plot(peso~altura)
cor(altura, peso)
set.seed(1)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <-  round(((altura-1)*100)+runif(1,-20,30), 2)
plot(peso~altura)
cor(altura, peso)
set.seed(1)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <-  round(((altura-1)*100)+runif(1,-50,50), 2)
plot(peso~altura)
cor(altura, peso)
peso <- round(((altura-1)*100)
)
ruido <- runif(10,-5,5)
ruido
peso <- peso + ruido
plot(peso~altura)
cor(altura, peso)
set.seed(1)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <- round(((altura-1)*100))
ruido <- runif(10,-10,10)
peso <- peso + ruido
plot(peso~altura)
cor(altura, peso)
set.seed(1)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <- round(((altura-1)*100))
ruido <- runif(10,-7,7)
peso <- peso + ruido
plot(peso~altura)
cor(altura, peso)
set.seed(1)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <- round(((altura-1)*100))
ruido <- runif(10,-7,7)
peso <- peso + ruido
peso
set.seed(1)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <- round(((altura-1)*100), 2)
peso
peso <- round(((altura-1)*100),3)
peso
peso <- round(((altura-1)*100, 2))
(altura-1)*100
set.seed(1)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <- (altura-1)*100
altura <- round(rnorm(10,1.6,0.1), 2)
peso <- (altura-1)*100
altura
peso
ruido <- runif(10,-7,7)
peso <- peso + ruido
peso
set.seed(1)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <- (altura-1)*100
ruido <- runif(10,-7,7)
peso <- round(peso + ruido, 2)
peso
peso
altura
summary(peso)
summary(altura)
cov(peso,altura)
cor(peso, altura)
var(peso)
var(altura)
0.44/(sqrt(47.8*0.006))
set.seed(1)
altura <- round(rnorm(10,1.6,0.1), 2)
peso <- (altura-1)*100
ruido <- runif(10,-7,7)
peso <- round(peso + ruido, 2)
plot(peso~altura)
cor(altura, peso)
ggplot(data = df,
mapping = aes(x = k,
y = z)) +
geom_point()+
geom_smooth(method = 'lm', se=F, col=2)+
#geom_smooth(se=F)+
xlab("X") +
ylab("Y") +
ggtitle("Correlação negativa")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
ggplot(data = data.frame(peso, altura),
mapping = aes(x = altura,
y = peso)) +
geom_point()+
geom_smooth(method = 'lm', se=F, col=2)+
#geom_smooth(se=F)+
xlab("X") +
ylab("Y") +
ggtitle("Correlação negativa")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
ggplot(data = data.frame(peso, altura),
mapping = aes(x = altura,
y = peso)) +
geom_point()+
#geom_smooth(method = 'lm', se=F, col=2)+
#geom_smooth(se=F)+
xlab("Altura") +
ylab("Peso") +
ggtitle("Peso em função de altura")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
var(peso)
var(altura)
var(peso, altura)
cor(peso, altura)
